name: run tests Android CI

on:
  workflow_dispatch:

permissions:
  contents: read
  actions: read
  checks: write
  
jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # - os: ubuntu-latest
          #   version: 29
          #   target: google_apis
          #   arch: x86_64
          #   profile: "Pixel 6 Pro"
          # - os: ubuntu-latest
          #   version: 30
          #   target: google_apis
          #   arch: x86_64
          #   profile: "Pixel 6 Pro"
          # - os: macos-latest
          #   version: 31
          #   target: google_apis
          #   arch: arm64-v8a
          #   profile: "Pixel 6 Pro"
          - os: ubuntu-latest
            version: 34
            target: google_apis
            arch: x86_64
            profile: "Pixel 6 Pro"

          # - { version: '31', arch: "x86_64", target: "google_apis", profile: "Pixel 6 Pro"}
          # # - { version: '33', arch: "x86_64", target: "google_apis", profile: "Pixel XL" }
    steps:
      - name: checkout
        uses: actions/checkout@v4
        
      - name: Set Up JDK Environment
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # - name: assemble tests
      #   run: ./gradlew assembleAndroidTest
        
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.version }}-${{ matrix.os }}-${{ matrix.target }}

      - name: Enable KVM for linux runners
        if: runner.os == 'Linux'
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.version }}
          target: ${{ matrix.target }}
          profile: ${{ matrix.profile }}
          arch: ${{ matrix.arch }}
          avd-name: Pixel6_${{ matrix.version }}
          ram-size: 2048M
          sdcard-path-or-size: 100M
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.version }}
          target: ${{ matrix.target }}
          profile: ${{ matrix.profile }}
          arch: ${{ matrix.arch }}
          avd-name: Pixel6_${{ matrix.version }}
          ram-size: 2048M
          sdcard-path-or-size: 100M
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: |
            adb devices
            adb shell wm size
            adb shell wm density
            ./gradlew app:connectedDebugAndroidTest
            
      - name: Generate Test Report
        uses: dorny/test-reporter@v1
        if: success() || failure()
        with:
          name: Test Report on ${{ matrix.api-level }}
          path: app/build/outputs/androidTest-results/connected/*.xml
          reporter: java-junit
